<Type Name="PartnerCredentials" FullName="Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials">
  <TypeSignature Language="C#" Value="public class PartnerCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartnerCredentials extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class PartnerCredentials" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Store.PartnerCenter.Extensions</AssemblyName>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Use this class to generate Partner Center API credentials. User plus application based authentication and application only authentication
            are supported.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateByApplicationCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.Store.PartnerCenter.IPartnerCredentials GenerateByApplicationCredentials (string clientId, string applicationSecret, string aadApplicationDomain, Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Store.PartnerCenter.IPartnerCredentials GenerateByApplicationCredentials(string clientId, string applicationSecret, string aadApplicationDomain, class Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials.GenerateByApplicationCredentials(System.String,System.String,System.String,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateByApplicationCredentials (clientId As String, applicationSecret As String, aadApplicationDomain As String, Optional requestContext As IRequestContext = null) As IPartnerCredentials" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter.Extensions</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Store.PartnerCenter.IPartnerCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="applicationSecret" Type="System.String" />
        <Parameter Name="aadApplicationDomain" Type="System.String" />
        <Parameter Name="requestContext" Type="Microsoft.Store.PartnerCenter.RequestContext.IRequestContext" />
      </Parameters>
      <Docs>
        <param name="clientId">The client id of the application in azure active directory. This application should be an Azure web application.</param>
        <param name="applicationSecret">The application secret with azure active directory.</param>
        <param name="aadApplicationDomain">The application domain in Azure Active Directory.</param>
        <param name="requestContext">An optional request context.</param>
        <summary>
            Generates partner credentials using azure active directory application credentials.
            </summary>
        <returns>The partner service credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateByApplicationCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.Store.PartnerCenter.IPartnerCredentials GenerateByApplicationCredentials (string clientId, string applicationSecret, string aadApplicationDomain, string aadAuthorityEndpoint, string graphEndpoint, Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Store.PartnerCenter.IPartnerCredentials GenerateByApplicationCredentials(string clientId, string applicationSecret, string aadApplicationDomain, string aadAuthorityEndpoint, string graphEndpoint, class Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials.GenerateByApplicationCredentials(System.String,System.String,System.String,System.String,System.String,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateByApplicationCredentials (clientId As String, applicationSecret As String, aadApplicationDomain As String, aadAuthorityEndpoint As String, graphEndpoint As String, Optional requestContext As IRequestContext = null) As IPartnerCredentials" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter.Extensions</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Store.PartnerCenter.IPartnerCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="applicationSecret" Type="System.String" />
        <Parameter Name="aadApplicationDomain" Type="System.String" />
        <Parameter Name="aadAuthorityEndpoint" Type="System.String" />
        <Parameter Name="graphEndpoint" Type="System.String" />
        <Parameter Name="requestContext" Type="Microsoft.Store.PartnerCenter.RequestContext.IRequestContext" />
      </Parameters>
      <Docs>
        <param name="clientId">The client id of the application in azure active directory. This application should be an Azure web application.</param>
        <param name="applicationSecret">The application secret with azure active directory.</param>
        <param name="aadApplicationDomain">The application domain in Azure Active Directory.</param>
        <param name="aadAuthorityEndpoint">The active directory authority endpoint.</param>
        <param name="graphEndpoint">The AAD graph API endpoint.</param>
        <param name="requestContext">An optional request context.</param>
        <summary>
            Generates partner credentials using azure active directory application credentials with the provided AAD overrides.
            </summary>
        <returns>The partner service credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateByApplicationCredentialsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.IPartnerCredentials&gt; GenerateByApplicationCredentialsAsync (string clientId, string applicationSecret, string aadApplicationDomain, Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Store.PartnerCenter.IPartnerCredentials&gt; GenerateByApplicationCredentialsAsync(string clientId, string applicationSecret, string aadApplicationDomain, class Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials.GenerateByApplicationCredentialsAsync(System.String,System.String,System.String,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateByApplicationCredentialsAsync (clientId As String, applicationSecret As String, aadApplicationDomain As String, Optional requestContext As IRequestContext = null) As Task(Of IPartnerCredentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter.Extensions</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials/&lt;GenerateByApplicationCredentialsAsync&gt;d__5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.IPartnerCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="applicationSecret" Type="System.String" />
        <Parameter Name="aadApplicationDomain" Type="System.String" />
        <Parameter Name="requestContext" Type="Microsoft.Store.PartnerCenter.RequestContext.IRequestContext" />
      </Parameters>
      <Docs>
        <param name="clientId">The client id of the application in azure active directory. This application should be an Azure web application.</param>
        <param name="applicationSecret">The application secret with azure active directory.</param>
        <param name="aadApplicationDomain">The application domain in Azure Active Directory.</param>
        <param name="requestContext">An optional request context.</param>
        <summary>
            Asynchronously generates partner credentials using azure active directory application credentials.
            </summary>
        <returns>The partner service credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateByApplicationCredentialsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.IPartnerCredentials&gt; GenerateByApplicationCredentialsAsync (string clientId, string applicationSecret, string aadApplicationDomain, string aadAuthorityEndpoint, string graphEndpoint, Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Store.PartnerCenter.IPartnerCredentials&gt; GenerateByApplicationCredentialsAsync(string clientId, string applicationSecret, string aadApplicationDomain, string aadAuthorityEndpoint, string graphEndpoint, class Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials.GenerateByApplicationCredentialsAsync(System.String,System.String,System.String,System.String,System.String,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateByApplicationCredentialsAsync (clientId As String, applicationSecret As String, aadApplicationDomain As String, aadAuthorityEndpoint As String, graphEndpoint As String, Optional requestContext As IRequestContext = null) As Task(Of IPartnerCredentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter.Extensions</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials/&lt;GenerateByApplicationCredentialsAsync&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.IPartnerCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="applicationSecret" Type="System.String" />
        <Parameter Name="aadApplicationDomain" Type="System.String" />
        <Parameter Name="aadAuthorityEndpoint" Type="System.String" />
        <Parameter Name="graphEndpoint" Type="System.String" />
        <Parameter Name="requestContext" Type="Microsoft.Store.PartnerCenter.RequestContext.IRequestContext" />
      </Parameters>
      <Docs>
        <param name="clientId">The client id of the application in azure active directory. This application should be an Azure web application.</param>
        <param name="applicationSecret">The application secret with azure active directory.</param>
        <param name="aadApplicationDomain">The application domain in Azure Active Directory.</param>
        <param name="aadAuthorityEndpoint">The active directory authority endpoint.</param>
        <param name="graphEndpoint">The AAD graph API endpoint.</param>
        <param name="requestContext">An optional request context.</param>
        <summary>
            Asynchronously generates partner credentials using azure active directory application credentials with the provided AAD overrides.
            </summary>
        <returns>The partner service credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateByUserCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.Store.PartnerCenter.IPartnerCredentials GenerateByUserCredentials (string clientId, Microsoft.Store.PartnerCenter.AuthenticationToken authenticationToken, Microsoft.Store.PartnerCenter.Extensions.TokenRefresher aadTokenRefresher = null, Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Store.PartnerCenter.IPartnerCredentials GenerateByUserCredentials(string clientId, class Microsoft.Store.PartnerCenter.AuthenticationToken authenticationToken, class Microsoft.Store.PartnerCenter.Extensions.TokenRefresher aadTokenRefresher, class Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials.GenerateByUserCredentials(System.String,Microsoft.Store.PartnerCenter.AuthenticationToken,Microsoft.Store.PartnerCenter.Extensions.TokenRefresher,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter.Extensions</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Store.PartnerCenter.IPartnerCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="authenticationToken" Type="Microsoft.Store.PartnerCenter.AuthenticationToken" />
        <Parameter Name="aadTokenRefresher" Type="Microsoft.Store.PartnerCenter.Extensions.TokenRefresher" />
        <Parameter Name="requestContext" Type="Microsoft.Store.PartnerCenter.RequestContext.IRequestContext" />
      </Parameters>
      <Docs>
        <param name="clientId">The client id of the application in azure active directory. This application should be an Azure native application.</param>
        <param name="authenticationToken">The azure active directory token.</param>
        <param name="aadTokenRefresher">An optional delegate which will be called when the azure active directory token
            expires and can no longer be used to generate the partner credentials. This delegate should return
            an up to date azure active directory token.</param>
        <param name="requestContext">An optional request context.</param>
        <summary>
            Generates partner credentials using a user plus application azure active directory token.
            </summary>
        <returns>The partner service credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateByUserCredentialsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.IPartnerCredentials&gt; GenerateByUserCredentialsAsync (string clientId, Microsoft.Store.PartnerCenter.AuthenticationToken authenticationToken, Microsoft.Store.PartnerCenter.Extensions.TokenRefresher aadTokenRefresher = null, Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Store.PartnerCenter.IPartnerCredentials&gt; GenerateByUserCredentialsAsync(string clientId, class Microsoft.Store.PartnerCenter.AuthenticationToken authenticationToken, class Microsoft.Store.PartnerCenter.Extensions.TokenRefresher aadTokenRefresher, class Microsoft.Store.PartnerCenter.RequestContext.IRequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials.GenerateByUserCredentialsAsync(System.String,Microsoft.Store.PartnerCenter.AuthenticationToken,Microsoft.Store.PartnerCenter.Extensions.TokenRefresher,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter.Extensions</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials/&lt;GenerateByUserCredentialsAsync&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.IPartnerCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="authenticationToken" Type="Microsoft.Store.PartnerCenter.AuthenticationToken" />
        <Parameter Name="aadTokenRefresher" Type="Microsoft.Store.PartnerCenter.Extensions.TokenRefresher" />
        <Parameter Name="requestContext" Type="Microsoft.Store.PartnerCenter.RequestContext.IRequestContext" />
      </Parameters>
      <Docs>
        <param name="clientId">The client id of the application in azure active directory. This application should be an Azure native application.</param>
        <param name="authenticationToken">The azure active directory token.</param>
        <param name="aadTokenRefresher">An optional delegate which will be called when the azure active directory token
            expires and can no longer be used to generate the partner credentials. This delegate should return
            an up to date azure active directory token.</param>
        <param name="requestContext">An optional request context.</param>
        <summary>
            Asynchronously generates partner credentials using a user plus application azure active directory token.
            </summary>
        <returns>The partner service credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As PartnerCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter.Extensions</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Store.PartnerCenter.Extensions.PartnerCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an instance of the partner credentials.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>