<Type Name="IServiceRequestCollection" FullName="Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection">
  <TypeSignature Language="C#" Value="public interface IServiceRequestCollection : Microsoft.Store.PartnerCenter.GenericOperations.IEntireEntityCollectionRetrievalOperations&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest,Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt;, Microsoft.Store.PartnerCenter.GenericOperations.IEntitySelector&lt;Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest&gt;, Microsoft.Store.PartnerCenter.IPartnerComponent, Microsoft.Store.PartnerCenter.IPartnerComponent&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceRequestCollection implements class Microsoft.Store.PartnerCenter.GenericOperations.IEntireEntityCollectionRetrievalOperations`2&lt;class Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest, class Microsoft.Store.PartnerCenter.Models.ResourceCollection`1&lt;class Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt;, class Microsoft.Store.PartnerCenter.GenericOperations.IEntitySelector`1&lt;class Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest&gt;, class Microsoft.Store.PartnerCenter.IPartnerComponent, class Microsoft.Store.PartnerCenter.IPartnerComponent`1&lt;string&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceRequestCollection&#xA;Implements IEntireEntityCollectionRetrievalOperations(Of ServiceRequest, ResourceCollection(Of ServiceRequest)), IEntitySelector(Of IServiceRequest), IPartnerComponent, IPartnerComponent(Of String)" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Store.PartnerCenter</AssemblyName>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Store.PartnerCenter.GenericOperations.IEntireEntityCollectionRetrievalOperations&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest,Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Store.PartnerCenter.GenericOperations.IEntitySelector&lt;Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Store.PartnerCenter.IPartnerComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Store.PartnerCenter.IPartnerComponent&lt;System.String&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents the behavior of service requests.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ById">
      <MemberSignature Language="C#" Value="public Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest ById (string serviceRequestId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest ById(string serviceRequestId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.ById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ById (serviceRequestId As String) As IServiceRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceRequestId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceRequestId">The service request ID.</param>
        <summary>
            Gets a single service request behavior.
            </summary>
        <returns>The service request operations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt; Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Store.PartnerCenter.Models.ResourceCollection`1&lt;class Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt; Get() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.Get" />
      <MemberSignature Language="VB.NET" Value="Public Function Get () As ResourceCollection(Of ServiceRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Retrieves all service requests.
            </summary>
        <returns>The service requests.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt; GetAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Store.PartnerCenter.Models.ResourceCollection`1&lt;class Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt; GetAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.GetAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync () As Task(Of ResourceCollection(Of ServiceRequest))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously retrieves all service requests.
            </summary>
        <returns>The service requests.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest this[string serviceRequestId] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(serviceRequestId As String) As IServiceRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceRequestId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceRequestId">The service request ID.</param>
        <summary>
            Gets a single service request behavior.
            </summary>
        <value>The service request operations.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt; Query (Microsoft.Store.PartnerCenter.Models.Query.IQuery serviceRequestsQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Store.PartnerCenter.Models.ResourceCollection`1&lt;class Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt; Query(class Microsoft.Store.PartnerCenter.Models.Query.IQuery serviceRequestsQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Function Query (serviceRequestsQuery As IQuery) As ResourceCollection(Of ServiceRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceRequestsQuery" Type="Microsoft.Store.PartnerCenter.Models.Query.IQuery" />
      </Parameters>
      <Docs>
        <param name="serviceRequestsQuery">A query to apply onto service requests. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory" /> to see how
            to build queries.</param>
        <summary>
            Queries service requests.
            - Count queries are not supported by this operation.
            - You can set the page size or filter or do both at the same time.
            - Sort is not supported. Default sorting is on status field.
            </summary>
        <returns>The requested service requests.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt; QueryAsync (Microsoft.Store.PartnerCenter.Models.Query.IQuery serviceRequestsQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Store.PartnerCenter.Models.ResourceCollection`1&lt;class Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt; QueryAsync(class Microsoft.Store.PartnerCenter.Models.Query.IQuery serviceRequestsQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryAsync (serviceRequestsQuery As IQuery) As Task(Of ResourceCollection(Of ServiceRequest))" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Store.PartnerCenter</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Store.PartnerCenter.Models.ResourceCollection&lt;Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceRequestsQuery" Type="Microsoft.Store.PartnerCenter.Models.Query.IQuery" />
      </Parameters>
      <Docs>
        <param name="serviceRequestsQuery">A query to apply onto service requests. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory" /> to see how
            to build queries.</param>
        <summary>
            Asynchronously queries service requests.
            - Count queries are not supported by this operation.
            - You can set the page size or filter or do both at the same time.
            - Sort is not supported. Default sorting is on status field.
            </summary>
        <returns>The requested service requests.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>